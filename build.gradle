plugins {
    id "org.springframework.boot" version "2.1.9.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "java"
    id "jacoco"
    id "net.ltgt.apt" version "0.8"
}

group = "com.lomasz.api.team"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
    maven { url "http://oss.jfrog.org/artifactory/oss-snapshot-local/" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter"

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-rest"

    compileOnly "org.projectlombok:lombok:1.18.10"
    annotationProcessor "org.projectlombok:lombok:1.18.10"

    compile "org.mapstruct:mapstruct:1.3.1.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

    compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile "io.springfox:springfox-swagger2:2.9.2"

    runtime "com.h2database:h2:1.4.200"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testCompile "org.mockito:mockito-junit-jupiter:3.1.0"
    testCompile "org.mockito:mockito-core:3.1.0"
}

clean {
    delete "out"
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            "**/*Application*",
                            "**/config/**/*",
                            "**/model/**/*",
                            "**/mapper/**/*",
                            "**/repository/**/*"
                    ]
            )
        }))
    }
}

test.finalizedBy jacocoTestReport

test {
    useJUnitPlatform()
}